server:
  port: 0

spring:
  application:
    name: order-service
  data:
    mongodb:
      host: localhost
      port: 27017
      database: Hotel
      username: username
      password: password
    web:
      pageable:
        default-page-size: 30
        size-parameter: size
        one-indexed-parameters: true
    rest:
      page-param-name: page
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notification
    producer:
      group-id: notificationId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.kosnik.service.event.OrderPlacedEvent
eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka

logging:
  pattern:
    console: =%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

management:
  health:
    circuit-breakers:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always

resilience4j:
  time-limiter:
    instances:
      email:
        timeout-duration: 3s
  retry:
    instances:
      mail:
        maxAttempts: 3
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  circuit-breaker:
    instances:
      email:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 20
        waitDurationInOpenState: 50s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10